DROP TABLE dishes IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP TABLE user_roles IF EXISTS;
DROP TABLE users IF EXISTS;
DROP TABLE votes IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000;
DROP INDEX users_unique_email_idx IF EXISTS;

CREATE TABLE users
(
  id               BIGINT GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1)  PRIMARY KEY,
  username         VARCHAR(255)             NOT NULL,
  first_name       VARCHAR(255)             ,
  last_name        VARCHAR(255)             ,
  email            VARCHAR(255)             NOT NULL,
  password         VARCHAR(255)             NOT NULL,
  registered       TIMESTAMP DEFAULT now()  NOT NULL
);
CREATE UNIQUE INDEX users_unique_username_idx ON users(username);
CREATE UNIQUE INDEX users_unique_email_idx ON users(email);

CREATE TABLE user_roles
(
  user_id BIGINT NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE restaurants (
  id         BIGINT GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name       VARCHAR(255)    NOT NULL,
  address    VARCHAR(1000)   NOT NULL,
  url        VARCHAR(255)    NOT NULL
);

CREATE TABLE dishes (
  id          BIGINT GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name        VARCHAR(255)    NOT NULL,
  price       INT             NOT NULL,
  restaurant_id    INTEGER    NOT NULL,
  date           TIMESTAMP    NOT NULL,
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX dishes_unique_restaurant_date_name ON dishes(name, restaurant_id, date);

CREATE TABLE votes (
  id BIGINT GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  user_id           BIGINT     NOT NULL,
  restaurant_id     BIGINT     NOT NULL,
  date_time         TIMESTAMP  NOT NULL
);